{"version":3,"sources":["components/TodoItem.module.css","components/Header.js","components/InputTodo.js","components/TodoItem.js","components/TodosList.js","pages/SinglePage.js","pages/About.js","pages/NoMatch.js","components/Navbar.js","components/TodoContainer.js","index.js"],"names":["module","exports","Header","style","padding","lineHeight","fontSize","fontWeight","marginBottom","color","textTransform","textAlign","InputTodo","props","useState","title","inputText","setInputText","onSubmit","e","preventDefault","trim","addTodoProps","alert","className","type","placeholder","value","name","onChange","target","marginTop","TodoItem","editing","setEditing","todo","completed","id","viewMode","editMode","display","useEffect","console","log","styles","item","onDoubleClick","checkbox","checked","handleChangeProps","onClick","deleteTodoProps","fontStyle","opacity","textDecoration","textInput","setUpdate","onKeyDown","event","key","TodosList","todos","map","SinglePage","useParams","slug","aboutContent","description","find","About","useRouteMatch","url","path","to","NoMatch","links","text","Navbar","navbarOpen","setNavbarOpen","width","height","link","activeClassName","exact","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","loadedTodos","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.e0f88ca5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__EiNWR\",\"checkbox\":\"TodoItem_checkbox__HTI3f\",\"textInput\":\"TodoItem_textInput__cdquX\"};","import React from \"react\";\n\nconst Header = () => {\n\tconst headerStyle = {\n\t\tpadding: \"20px 0\",\n\t\tlineHeight: \"1.5em\"\n\t}\n\treturn (\n\t\t<header style={headerStyle}>\n\t\t\t<h1\n\t\t\t\tstyle={\n\t\t\t\t\t{\n\t\t\t\t\t\tfontSize: \"6rem\",\n\t\t\t\t\t\tfontWeight: \"600\",\n\t\t\t\t\t\tmarginBottom: \"2rem\",\n\t\t\t\t\t\tlineHeight: \"1em\",\n\t\t\t\t\t\tcolor: \"#ececec\",\n\t\t\t\t\t\ttextTransform: \"lowercase\",\n\t\t\t\t\t\ttextAlign: \"center\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t>\n\t\t\t\ttodos\n\t\t\t</h1>\n\t\t</header>\n\t);\n}\n\nexport default Header\n","import React, { useState } from \"react\";\nimport { FaPlusCircle } from \"react-icons/fa\";\n\nconst InputTodo = props => {\n\tconst [inputText, setInputText] = useState(\n\t\t{\n\t\t\ttitle: \"\"\n\t\t}\n\t);\n\n\tconst onChange = e => {\n\t\tsetInputText(\n\t\t\t{\n\t\t\t\t...inputText,\n\t\t\t\t[e.target.name]: e.target.value\n\t\t\t}\n\t\t);\n\t}\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tif (inputText.title.trim()) {\n\t\t\tprops.addTodoProps(inputText.title);\n\t\t\tsetInputText(\n\t\t\t\t{\n\t\t\t\t\ttitle: \"\"\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\talert(\"Please, write item\");\n\t\t}\n\t}\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className=\"form-container\">\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName=\"input-text\"\n\t\t\t\tplaceholder=\"Add todo...\"\n\t\t\t\tvalue={inputText.title}\n\t\t\t\tname=\"title\"\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t\t<button className=\"input-submit\">\n\t\t\t\t<FaPlusCircle\n\t\t\t\t\tstyle={{ color: \"darkcyan\", fontSize: \"20px\", marginTop: \"2px\" }}\n\t\t\t\t/>\n\t\t\t</button>\n\t\t</form>\n\t);\n}\n\nexport default InputTodo;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./TodoItem.module.css\";\nimport { FaTrash } from \"react-icons/fa\";\n\nconst TodoItem = props => {\n\tconst [editing, setEditing] = useState(false);\n\n\tconst handleEditing = () => {\n\t\tsetEditing(true);\n\t}\n\n\tconst handleUpdatedDone = event => {\n\t\tif (event.key === \"Enter\") {\n\t\t\tsetEditing(false);\n\t\t}\n\t}\n\n\tconst completedStyle = {\n\t\tfontStyle: \"italic\",\n\t\tcolor: \"#595959\",\n\t\topacity: 0.4,\n\t\ttextDecoration: \"line-through\"\n\t}\n\n\tconst { completed, id, title } = props.todo;\n\n\tlet viewMode = {};\n\n\tlet editMode = {};\n\n\tif (editing) {\n\t\tviewMode.display = \"none\";\n\t} else {\n\t\teditMode.display = \"none\";\n\t}\n\n\tuseEffect (\n\t\t() => {\n\t\t\treturn () => {\n\t\t\t\tconsole.log(\"Cleaning up...\");\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\treturn (\n\t\t<li className={styles.item}>\n\t\t\t<div onDoubleClick={handleEditing} style={viewMode}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tclassName={styles.checkbox}\n\t\t\t\t\tchecked={completed}\n\t\t\t\t\tonChange={() => props.handleChangeProps(id)}\n\t\t\t\t/>\n\t\t\t\t<button onClick={() => props.deleteTodoProps(id)}>\n\t\t\t\t\t<FaTrash\n\t\t\t\t\t\tstyle={{ color: \"orangered\", fontSize: \"16px\" }}\n\t\t\t\t\t/>\n\t\t\t\t</button>\n\t\t\t\t<span style={props.todo.completed ? completedStyle : null}>\n\t\t\t\t\t{title}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\ttype = \"text\"\n\t\t\t\tstyle = {editMode}\n\t\t\t\tclassName = {styles.textInput}\n\t\t\t\tvalue = {title}\n\t\t\t\tonChange = {\n\t\t\t\t\te => {\n\t\t\t\t\t\tprops.setUpdate(e.target.value, id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tonKeyDown = {handleUpdatedDone}\n\t\t\t/>\n\t\t</li>\n\t);\n\n}\n\n/*\nclass TodoItem extends React.Component {\n\tstate =  {\n\t\tediting: false\n\t}\n\thandleEditing = () => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tediting: true\n\t\t\t}\n\t\t);\n\t}\n\thandleUpdatedDone = event => {\n\t\tif (event.key === \"Enter\") {\n\t\t\tthis.setState( { editing: false } );\n\t\t}\n\t}\n\trender() {\n\t\tconst completedStyle = {\n\t\t\tfontStyle: \"italic\",\n\t\t\tcolor: \"#595959\",\n\t\t\topacity: 0.4,\n\t\t\ttextDecoration: \"line-through\"\n\t\t}\n\t\tconst { completed, id, title } = this.props.todo;\n\t\tlet viewMode = {};\n\t\tlet editMode = {};\n\t\tif (this.state.editing) {\n\t\t\tviewMode.display = \"none\";\n\t\t} else {\n\t\t\teditMode.display = \"none\";\n\t\t}\n\t\treturn (\n\t\t\t<li className={styles.item}>\n\t\t\t\t<div onDoubleClick={this.handleEditing} style={viewMode}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tclassName={styles.checkbox}\n\t\t\t\t\t\tchecked={completed}\n\t\t\t\t\t\t//onChange={() => console.log(\"clicked\")}\n\t\t\t\t\t\tonChange={() => this.props.handleChangeProps(id)}\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={() => this.props.deleteTodoProps(id)}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</button>\n\t\t\t\t\t<span style={this.props.todo.completed ? completedStyle : null}>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\ttype = \"text\"\n\t\t\t\t\tstyle = {editMode}\n\t\t\t\t\tclassName = {styles.textInput}\n\t\t\t\t\tvalue = {title}\n\t\t\t\t\tonChange = {\n\t\t\t\t\t\te => {\n\t\t\t\t\t\t\tthis.props.setUpdate(e.target.value, id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tonKeyDown = {this.handleUpdatedDone}\n\t\t\t\t/>\n\t\t\t</li>\n\t\t)\n\t}\n}\n*/\n\nexport default TodoItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodosList = props => {\n\treturn (\n\t\t<ul>\n\t\t\t{\n\t\t\t\tprops.todos.map(\n\t\t\t\t\ttodo => (\n\t\t\t\t\t\t<TodoItem\n\t\t\t\t\t\t\tkey={todo.id}\n\t\t\t\t\t\t\ttodo={todo}\n\t\t\t\t\t\t\thandleChangeProps={props.handleChangeProps}\n\t\t\t\t\t\t\tdeleteTodoProps={props.deleteTodoProps}\n\t\t\t\t\t\t\tsetUpdate = {props.setUpdate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t}\n\t\t</ul>\n\t);\n}\n\n/*\nclass TodosList extends React.Component {\n\trender() {\n\t\t//console.log(this.props.handleChangeProps);\n\t\treturn (\n\t\t\t<ul>\n\t\t\t\t{\n\t\t\t\t\tthis.props.todos.map(\n\t\t\t\t\t\ttodo => (\n\t\t\t\t\t\t\t<TodoItem\n\t\t\t\t\t\t\t\tkey={todo.id}\n\t\t\t\t\t\t\t\ttodo={todo}\n\t\t\t\t\t\t\t\thandleChangeProps={this.props.handleChangeProps}\n\t\t\t\t\t\t\t\tdeleteTodoProps={this.props.deleteTodoProps}\n\t\t\t\t\t\t\t\tsetUpdate = {this.props.setUpdate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</ul>\n\t\t);\n\t}\n}\n*/\nexport default TodosList;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst SinglePage = () => {\n  console.log(useParams());\n\n  const aboutData = [\n    {\n      slug: \"about-app\",\n      title: \"About the App\",\n      description: \"In this app, you can add, delete, submit and edit items. \" +\n        \"To edit items, simply double click on it. Once you are done, press the enter key to resubmit. \" +\n        \"This app will persist your data in the browser local storage. So wether you reload, \" +\n        \"close your app or reopened it, you still have access to your to-dos items.\",\n    },\n    {\n      slug: \"about-author\",\n      title: \"About the Author\",\n      description:\n        \"This app was developed by Ibas Majid, a self-taught web developer and a technical writer. \" +\n        \"He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.\",\n    },\n  ];\n\n  const { slug } = useParams();\n  const aboutContent = aboutData.find((item) => item.slug === slug);\n  const { title, description } = aboutContent;\n\n  return (\n    <div className=\"main__content\">\n      <h1>{title}</h1>\n      <p>{description}</p>\n    </div>\n  );\n};\nexport default SinglePage;\n","import React from \"react\";\n\nimport { Link, Route, useRouteMatch } from \"react-router-dom\";\n\nimport SinglePage from \"./SinglePage\";\n\nconst About = (props) => {\n  const { url, path } = useRouteMatch();\n\n  return (\n    <div className=\"about__content\">\n      <ul className=\"about__list\">\n        <li>\n          <Link to={`${url}/about-app`}>About App</Link>\n        </li>\n        <li>\n          <Link to={`${url}/about-author`}>About Author</Link>\n        </li>\n      </ul>\n      <Route path={`${path}/:slug`}>\n        <SinglePage />\n      </Route>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst NoMatch = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h3>Hello from error page</h3>\n\t\t</div>\n\t);\n}\n\nexport default NoMatch;\n","import React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { MdClose } from \"react-icons/md\";\nimport { FiMenu } from \"react-icons/fi\";\n\nconst links = [\n  {\n    id: 1,\n    path: \"/\",\n    text: \"Home\",\n  },\n  {\n    id: 2,\n    path: \"/about\",\n    text: \"About\",\n  },\n];\n\nconst Navbar = () => {\n  const [navbarOpen, setNavbarOpen] = useState(false);\n\n  const handleToggle = () => {\n    setNavbarOpen(!navbarOpen);\n  };\n\n  const closeMenu = () => {\n    setNavbarOpen(false);\n  };\n\n  return (\n    <nav className=\"navBar\">\n      <button onClick={handleToggle}>\n        {navbarOpen\n          ? (<MdClose\n            style={{ color: \"#fff\", width: \"40px\", height: \"40px\" }}\n          />)\n          : (<FiMenu\n            style={{ color: \"#7b7b7b\", width: \"40px\", height: \"40px\" }}\n          />)}\n      </button>\n      <ul className={`menuNav ${navbarOpen ? \" showMenu\" : \"\"}`}>\n        {links.map(\n          (link) => {\n            return (\n              <li key={link.id}>\n                <NavLink\n                  to={link.path}\n                  activeClassName=\"active-link\"\n                  onClick={() => closeMenu()}\n                  exact\n                >\n                  {link.text}\n                </NavLink>\n              </li>\n            );\n          },\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport InputTodo from \"./InputTodo\";\nimport TodosList from \"./TodosList\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport About from \"../pages/About\";\nimport NotMatch from \"../pages/NoMatch\";\n\nimport Navbar from \"./Navbar\";\n\nconst TodoContainer = () => {\n//console.log(`TodoContainer() >> ${JSON.stringify(getInitialTodos())}`)\n\tconst [todos, setTodos] = useState(getInitialTodos());\n\t//const [todos, setTodos] = useState([]);\n\n\tconst handleChange = id => {\n//console.log(`TodoContainer() >> handleChange(\"${id}\")`);\n\t\tsetTodos(\n\t\t\tprevState => {\n\t\t\t\treturn prevState.map(\n\t\t\t\t\ttodo => {\n\t\t\t\t\t\tif (todo.id === id) {\n//console.log(`TodoContainer() >> handleChange(\"${id}\") >> return ${JSON.stringify({...todo, completed: !todo.completed})}`);\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...todo,\n\t\t\t\t\t\t\t\tcompleted: !todo.completed\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n//console.log(`TodoContainer() >> handleChange(\"${id}\") >> return ${JSON.stringify(todo)}`);\n\t\t\t\t\t\treturn todo;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t)\n\t}\n\n\tconst delTodo = id => {\n\t\tsetTodos(\n\t\t\t[\n\t\t\t\t...todos.filter(\n\t\t\t\t\ttodo=> {\n\t\t\t\t\t\treturn todo.id !== id;\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t]\n\t\t);\n\t}\n\n\tconst addTodoItem = title => {\n\t\tconst newTodo = {\n\t\t\tid: uuidv4(),\n\t\t\ttitle: title,\n\t\t\tcompleted: false\n\t\t}\n\t\tsetTodos(\n\t\t\t[\n\t\t\t\t...todos,\n\t\t\t\tnewTodo\n\t\t\t]\n\t\t);\n\t}\n\n\tconst setUpdate = (updatedTitle, id) => {\n\t\tsetTodos(\n\t\t\ttodos.map(\n\t\t\t\ttodo => {\n\t\t\t\t\tif (todo.id === id) {\n\t\t\t\t\t\ttodo.title = updatedTitle;\n\t\t\t\t\t}\n\t\t\t\t\treturn todo;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t}\n\n/**/\n\tuseEffect(\n\t\t() => {\n\t\t\tconsole.log(\"test run\");\n\n\t\t\t// getting stored items\n\t\t\tconst temp = localStorage.getItem(\"todos\");\n\t\t\tconst loadedTodos = JSON.parse(temp);\n\n\t\t\tif (loadedTodos) {\n\t\t\t\tsetTodos(loadedTodos);\n\t\t\t}\n\t\t},\n\t\t[setTodos]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\t// storing stored items\n\t\t\tconst temp = JSON.stringify(todos);\n\t\t\tlocalStorage.setItem(\"todos\", temp);\n\t\t},\n\t\t[todos]\n\t);\n/**/\n\tfunction getInitialTodos() {\n\t\t//gettin stored items\n\t\tconst temp = localStorage.getItem(\"todos\");\n\t\tconst savedTodos = JSON.parse(temp);\n//console.log(`getInitialTodos() => savedTodos === ${JSON.stringify(savedTodos)}`);\n\t\treturn savedTodos || [];\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Navbar />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t\t<InputTodo addTodoProps={addTodoItem} />\n\t\t\t\t\t\t\t<TodosList\n\t\t\t\t\t\t\t\ttodos = {todos}\n\t\t\t\t\t\t\t\thandleChangeProps = {handleChange}\n\t\t\t\t\t\t\t\tdeleteTodoProps = {delTodo}\n\t\t\t\t\t\t\t\tsetUpdate = {setUpdate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/about\">\n\t\t\t\t\t<About />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t<NotMatch />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</>\n\t);\n}\n\n/*\nreturn (\n\t<>\n\t\t<Navbar />\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<InputTodo addTodoProps={addTodoItem} />\n\t\t\t\t\t\t<TodosList\n\t\t\t\t\t\t\ttodos = {todos}\n\t\t\t\t\t\t\thandleChangeProps = {handleChange}\n\t\t\t\t\t\t\tdeleteTodoProps = {delTodo}\n\t\t\t\t\t\t\tsetUpdate = {setUpdate}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Route>\n\t\t\t<Route path=\"/about\">\n\t\t\t\t<About />\n\t\t\t</Route>\n\t\t\t<Route path=\"*\">\n\t\t\t\t<NotMatch />\n\t\t\t</Route>\n\t\t</Switch>\n\t</>\n);\n\n\nclass TodoContainer extends React.Component {\n\tstate = {\n\t\ttodos: []\n\t};\n\thandleChange = id => {\n\t\tthis.setState(\n\t\t\tprevState => (\n\t\t\t\t{\n\t\t\t\t\ttodos: prevState.todos.map(\n\t\t\t\t\t\ttodo => {\n\t\t\t\t\t\t\tif (todo.id === id) {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t...todo,\n\t\t\t\t\t\t\t\t\tcompleted: !todo.completed\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn todo;\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t};\n\tdelTodo = id => {\n\t\t//console.log(\"deleted\", id);\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\ttodos: [\n\t\t\t\t\t...this.state.todos.filter(\n\t\t\t\t\t\ttodo => {\n\t\t\t\t\t\t\treturn todo.id !== id;\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t]\n\t\t\t}\n\t\t);\n\t};\n\taddTodoItem = title => {\n\t\tconst newTodo = {\n\t\t\tid: uuidv4(),\n\t\t\ttitle: title,\n\t\t\tcompleted: false\n\t\t};\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\ttodos: [...this.state.todos, newTodo]\n\t\t\t}\n\t\t);\n\t}\n\tsetUpdate = (updatedTitle, id) => {\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\ttodos: this.state.todos.map(\n\t\t\t\t\ttodo => {\n\t\t\t\t\t\tif (todo.id === id) {\n\t\t\t\t\t\t\ttodo.title = updatedTitle;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn todo;\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t);\n\t}\n\tcomponentDidMount() {\n\t\tconst temp = localStorage.getItem(\"todos\");\n\t\tconst loadedTodos = JSON.parse(temp);\n\t\tif (loadedTodos) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\ttodos: loadedTodos\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevState.todos !== this.state.todos) {\n\t\t\tconst temp = JSON.stringify(this.state.todos)\n\t\t\tlocalStorage.setItem(\"todos\", temp);\n\t\t}\n\t}\n\tcomponentWillUnmount() {\n\t\tconsole.log(\"Cleaning up...\");\n\t}\n\trender() {\n\t\t//console.log(this.handleChange);\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t<Header />\n\t\t\t\t\t<InputTodo addTodoProps={this.addTodoItem} />\n\t\t\t\t\t<TodosList\n\t\t\t\t\t\ttodos = {this.state.todos}\n\t\t\t\t\t\thandleChangeProps = {this.handleChange}\n\t\t\t\t\t\tdeleteTodoProps = {this.delTodo}\n\t\t\t\t\t\tsetUpdate = {this.setUpdate}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n*/\n\nexport default TodoContainer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n// component file\nimport TodoContainer from \"./components/TodoContainer\";\n\n// stylesheet\nimport \"./App.css\";\n\n//const element = <h1>Hello from Create React App</h1>\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <TodoContainer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}